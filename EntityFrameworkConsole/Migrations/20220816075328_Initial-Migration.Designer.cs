// <auto-generated />
using EntityFrameworkConsole.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EntityFrameworkConsole.Migrations
{
    [DbContext(typeof(CricketPlayerContext))]
    [Migration("20220816075328_Initial-Migration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("EntityFrameworkConsole.Models.CricketPlayer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CricketPlayers");
                });

            modelBuilder.Entity("EntityFrameworkConsole.Models.CricketPlayer", b =>
                {
                    b.OwnsOne("EntityFrameworkConsole.Models.Team", "Team", b1 =>
                        {
                            b1.Property<int>("CricketPlayerId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .UseIdentityColumn();

                            b1.Property<int>("Id")
                                .HasColumnType("int");

                            b1.Property<string>("Name")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("CricketPlayerId");

                            b1.ToTable("CricketPlayers");

                            b1.WithOwner()
                                .HasForeignKey("CricketPlayerId");
                        });

                    b.Navigation("Team");
                });
#pragma warning restore 612, 618
        }
    }
}
